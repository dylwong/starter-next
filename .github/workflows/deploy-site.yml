name: Deploy Site

on:
  workflow_dispatch:
    inputs:
      URL:
        description: 'Destination URL'
        default: 'https://snap.dev/'
        required: true
      WEBFLOW_URL:
        description: 'Webflow URL'
        default: 'https://snapdev.webflow.io/'
        required: true
      NETLIFY_SITE_ID:
        description: 'Netlify Site ID'
        default: '2d4e657a-4c8e-4bab-a826-87e96bc7cf9c'
        required: true
      BCP:
        default: 'false'
        description: 'Convert All Pages'
      OPTIMIZE_IMAGES:
        default: 'false'
        description: 'Enable image optimizations; true/false'
      REPLACE_SITEMAP:
        description: 'Replace sitemap.xml file; true/false'
      REMOVE_WEBFLOW_BRANDING:
        default: 'false'
        description: 'Remove Webflow branding; true/false'
      CLIENT_ROUTING:
        default: 'true'
        description: 'Enable client-side routing; true/false'
      REPLACE_ROBOTS_TXT:
        default: 'false'
        description: 'Create an empty robots.txt file; true/false'

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ~/.npm
            node_modules
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-


      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          npm list yarn || npm i -g yarn
          yarn
      - name: Run
        run: |
          yarn build:start
          yarn netlify
          yarn build:finish
          mv .next dist
        env:
          NODE_ENV: production
          BCP: ${{ github.event.inputs.BCP }}
          CRYOLAYER_HOSTING: ${{ secrets.CRYOLAYER_HOSTING }}
          URL: ${{ github.event.inputs.URL }}
          WEBFLOW_URL: ${{ github.event.inputs.WEBFLOW_URL }}
          OPTIMIZE_IMAGES: ${{ github.event.inputs.OPTIMIZE_IMAGES }}
          REPLACE_ROBOTS_TXT: ${{ github.event.inputs.REPLACE_ROBOTS_TXT }}
          REPLACE_SITEMAP: ${{ github.event.inputs.REPLACE_SITEMAP }}
          OPTIMIZE_JS_LOADING: ${{ github.event.inputs.OPTIMIZE_JS_LOADING }}
          REMOVE_WEBFLOW_BRANDING: ${{ github.event.inputs.REMOVE_WEBFLOW_BRANDING }}
          SITE_ID: ${{ github.event.inputs.NETLIFY_SITE_ID }}
          CLIENT_ROUTING: ${{ github.event.inputs.CLIENT_ROUTING }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
          NETLIFY_SITE_ID: ${{ github.event.inputs.NETLIFY_SITE_ID }}
      - name: On Error
        if: ${{ failure() }}
        run: |
          yarn build:error
        env:
          NODE_ENV: production
          BCP: ${{ github.event.inputs.BCP }}
          CRYOLAYER_HOSTING: ${{ secrets.CRYOLAYER_HOSTING }}
          URL: ${{ github.event.inputs.URL }}
          WEBFLOW_URL: ${{ github.event.inputs.WEBFLOW_URL }}
          OPTIMIZE_IMAGES: ${{ github.event.inputs.OPTIMIZE_IMAGES }}
          REPLACE_ROBOTS_TXT: ${{ github.event.inputs.REPLACE_ROBOTS_TXT }}
          REPLACE_SITEMAP: ${{ github.event.inputs.REPLACE_SITEMAP }}
          REMOVE_WEBFLOW_BRANDING: ${{ github.event.inputs.REMOVE_WEBFLOW_BRANDING }}
          SITE_ID: ${{ github.event.inputs.NETLIFY_SITE_ID }}
          CLIENT_ROUTING: ${{ github.event.inputs.CLIENT_ROUTING }}
          OPTIMIZE_JS_LOADING: ${{ github.event.inputs.OPTIMIZE_JS_LOADING }}
      # - name: Deploy to Netlify
      #   uses: nwtgck/actions-netlify@v1.2
      #   with:
      #     publish-dir: './dist'
      #     production-deploy: true
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     netlify-config-path: 'netlify.toml'
      #     deploy-message: "Deploy from GitHub Actions"
      #     enable-pull-request-comment: false
      #     enable-commit-status: false
      #     enable-commit-comment: false
      #     overwrites-pull-request-comment: false
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ github.event.inputs.NETLIFY_SITE_ID }}
      #   timeout-minutes: 1
      # - name: On Error
      #   if: ${{ failure() }}
      #   run: |
      #     yarn build:error
      #   env:
      #     NODE_ENV: production
      #     BCP: ${{ github.event.inputs.BCP }}
      #     CRYOLAYER_HOSTING: ${{ secrets.CRYOLAYER_HOSTING }}
      #     URL: ${{ github.event.inputs.URL }}
      #     WEBFLOW_URL: ${{ github.event.inputs.WEBFLOW_URL }}
      #     INLINE_CSS: ${{ github.event.inputs.INLINE_CSS }}
      #     REPLACE_ROBOTS_TXT: ${{ github.event.inputs.REPLACE_ROBOTS_TXT }}
      #     REPLACE_SITEMAP: ${{ github.event.inputs.REPLACE_SITEMAP }}
      #     WEBP: ${{ github.event.inputs.WEBP }}
      #     REMOVE_WEBFLOW_BRANDING: ${{ github.event.inputs.REMOVE_WEBFLOW_BRANDING }}
      #     OPTIMIZE_IMAGES: ${{ github.event.inputs.OPTIMIZE_IMAGES }}
      #     SITE_ID: ${{ github.event.inputs.NETLIFY_SITE_ID }}
      #     CLIENT_ROUTING: ${{ github.event.inputs.CLIENT_ROUTING }}
      #     OPTIMIZE_JS_LOADING: ${{ github.event.inputs.OPTIMIZE_JS_LOADING }}